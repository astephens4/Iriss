<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="11.3">
  <zoom_level>9</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>819</x>
      <y>360</y>
      <w>360</w>
      <h>324</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
/Utils::Image/
--
- width: int
- height: int
- depth: int
- format: Utils::Color::Format
- data: unsigned int*
- file: std::string
- time: Utils::TimeStamp
--
+ getWidth(void): int
+ getHeight(void): int
+ getColorDepth(void): int
+ getFormat(void): Utils::Color::Format
+ pack(void): void
+ unpack(fullByteStream: const char*): void
/+ getIntensity(x: int, y: int): float&amp;/
/+ readImage(fileName: std::string): bool/
/+ writeImage(fileName: std::string): bool/
--
Responsibilities
Represent a generic image.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>567</x>
      <y>657</y>
      <w>449</w>
      <h>125</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>432;27;27;108</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>405</x>
      <y>765</y>
      <w>387</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>Utils::BWImage
--
--
+ getIntensity(x: int, y: int): float&amp;
+ readImage(fileName: std::string): bool
+ writeImage(fileName: std::string): bool
--
Responsibilities
Represent a Black and White image.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>810</x>
      <y>765</y>
      <w>387</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>Utils::ColorImage
--
--
+ getIntensity(x: int, y: int): float&amp;
+ getColor(x: int, y: int): Utils::Color&amp;
+ readImage(fileName: std::string): bool
+ writeImage(fileName: std::string): bool
--
Responsibilities
Represent a color image.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1224</x>
      <y>765</y>
      <w>414</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>Utils::GrayScaleImage
--
- percentRed: float
- percentGreen: float
- percentBlue: float
--
+ setGrayPercent(red: float, green: float, blue: float): void
+ getGrayPercent(red: float&amp;, green: float&amp;, blue: float&amp;): void
+ getIntensity(x: int, y: int): float
+ readImage(fileName: std::string): bool
+ writeImage(fileName: std::string): bool
--
Responsibilities
Represent a grayscale image.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>972</x>
      <y>657</y>
      <w>44</w>
      <h>125</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>27;27;27;108</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>972</x>
      <y>657</y>
      <w>485</w>
      <h>125</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>27;27;468;108</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1314</x>
      <y>396</y>
      <w>306</w>
      <h>234</h>
    </coordinates>
    <panel_attributes>Utils::TimeStamp
--
year: unsigned int
month: TimeStamp::Month
calDay: unsigned int
weekDay: TimeStamp::Day
hour: unsigned int
minute: unsigned int
sec: unsigned int
--
+ update(void): void
+ read(asStr: std::string): void
+ write(void): std::string
--
Responsibilities
Set time information at creation, and update if
requested. Allows reading and writing to streams</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>855</x>
      <y>0</y>
      <w>279</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
Utils::Serializeable
--
# buf: unsigned char[]
# packedSize: unsigned int
# inTransmission: unsigned int
_+ type: const unsigned int_
--
/+ pack(void): void/
/+ unpack(fullByteStream: const char[]): void/
+ sendSync(sock: Utils::Socket&amp;): void
+ sendAsync(sock: Utils::Socket&amp;): void
+ isSending(void): bool
+ receiveSync(sock: Utils::Socket&amp;): void
+ receiveAsync(sock: Utils::Socket&amp;): void
+ isReceiving(void): bool
--
Responsibilities
Classes derived from this interface support
packing into a byte stream for sending over
a network.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1206</x>
      <y>54</y>
      <w>315</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
Utils::Serializeable::Type
--
IMAGE: unsigned int
IRISS_STATUS: unsigned int
--
Responsibilities
Every time a new class implements serializeable,
add that type to this enum</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>333</x>
      <y>1269</y>
      <w>747</w>
      <h>279</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Utils::Socket
--
- Sock: struct { addr: std::string; port: int }
- sockLock: mutex
_- sockMap: std::map&lt;Sock,std::sharedptr&lt;Socket&gt; &gt;_
# fd: int
--
_+ get_connection(addr: std::string, portNo: unsigned short, protocol: Utils::Socket::Layer4Protocol): sharedptr&lt;Socket&gt;_
+ verify(void): bool
+ close(): void
+ send(buf: const unsigned char*, size: unsigned int): void
+ receive(buf: unsigned char*, size: unsigned int): unsigned int
/# do_send(buf: const unsigned char*, size: unsigned int): void/
/# do_receive(buf: unsigned char*, size: unsigned int): unsigned int/
--
Responsibilities
Open and verify an IP socket. Send and receive
data through this socket. Manages all connections opened
through this class so a connection may be shared.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>288</x>
      <y>1611</y>
      <w>414</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>Utils::TCPSocket
--
--
# do_send(buf: const unsigned char*, size: unsigned int): void
# do_receive(buf: unsigned char*, size: unsigned int): unsigned int
--
Responsibilities
Open and verify a TCP IP socket. Send and receive
data through this socket with verification and
resubmission.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>756</x>
      <y>1611</y>
      <w>396</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>Utils::UDPSocket
--
--
# do_send(buf: const unsigned char*, size: unsigned int): void
# do_receive(buf: unsigned char*, size: unsigned int): unsigned int
--
Responsibilities
Open and verify a UDP IP socket. Send and receive
data through this socket without verification.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>981</x>
      <y>261</y>
      <w>44</w>
      <h>116</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>27;27;27;99</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1107</x>
      <y>90</y>
      <w>117</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>27;27;99;27</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>693</x>
      <y>1521</y>
      <w>288</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>27;27;270;90</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>495</x>
      <y>1521</y>
      <w>243</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>225;27;27;90</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1152</x>
      <y>495</y>
      <w>179</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>27;27;162;27</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>990</x>
      <y>909</y>
      <w>216</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>Utils::Color
--
+ red: unsigned char
+ green: unsigned char
+ blue: unsigned char
--
+ asUint32(format: Utils::Color::Format): unsigned int
--
Responsibilities
Represents a 24-bit color.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1062</x>
      <y>1017</y>
      <w>44</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>27;63;27;27</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1008</x>
      <y>1080</y>
      <w>144</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
Utils::Color::Format
--
RGB
BGR
BLACK_WHITE
GRAY_SCALE</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>675</x>
      <y>954</y>
      <w>189</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Utils::Angle
--
value: float
--
/+ set(value: Units::Angle&amp;)/
/+ asDegrees(): Units::Degrees/
/+ asRadians(): Units::Radians/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>630</x>
      <y>1035</y>
      <w>161</w>
      <h>107</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>144;27;27;90</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>747</x>
      <y>1035</y>
      <w>143</w>
      <h>107</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>27;27;126;90</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>783</x>
      <y>1125</y>
      <w>189</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Utils::Radians
--
--
+ asDegrees(): Units::Degrees
+ asRadians(): Units::Radians
+ getValue(): float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>558</x>
      <y>1125</y>
      <w>189</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Utils::Degrees
--
--
+ asDegrees(): Units::Degrees
+ asRadians(): Units::Radians
+ getValue(): float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>351</x>
      <y>1125</y>
      <w>189</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Utils::Feet
--
--
+ asInches(): Units::Inches
+ asFeet(): Units::Feet
+ getValue(): float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>306</x>
      <y>1053</y>
      <w>153</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>27;27;135;72</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>243</x>
      <y>972</y>
      <w>189</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Utils::Distance
--
value: float
--
/+ set(value: Units::Distance&amp;)/
/+ asInches(): Units::Inches/
/+ asFeet(): Units::Feet/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>198</x>
      <y>1053</y>
      <w>144</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>135;27;27;72</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>126</x>
      <y>1125</y>
      <w>189</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Utils::Inches
--
--
+ asInches(): Units::Inches
+ asFeet(): Units::Feet
+ getValue(): float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1125</x>
      <y>657</y>
      <w>107</w>
      <h>476</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>54;27;90;99;90;450;27;459</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>981</x>
      <y>855</y>
      <w>116</w>
      <h>71</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>27;27;99;54</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>0</x>
      <y>1368</y>
      <w>225</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
Utils::Socket::Layer4Protocol
--
TCP
UDP</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>198</x>
      <y>1395</y>
      <w>153</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>135;27;27;27</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>171</x>
      <y>567</y>
      <w>513</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Utils::FileIO
--
--
_+ writeImageFile(image: const Utils::Image&amp;, type: Utils::Image::FileType): bool_
_+ readImageFile(fileName: const std::string&amp;, image: Utils::Image&amp;): bool_
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>585</x>
      <y>378</y>
      <w>144</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
Utils::Image::FileType
--
PNG_COMPRESSED
PNG_UNCOMPRESSED
BMP
JPEG</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>702</x>
      <y>414</y>
      <w>134</w>
      <h>71</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>117;54;27;27</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>405</x>
      <y>414</y>
      <w>197</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>180;27;27;153</additional_attributes>
  </element>
</diagram>
